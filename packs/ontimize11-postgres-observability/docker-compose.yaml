version: '3'
services:
  database:
    image: bitnami/postgresql:11.12.0-debian-10-r13
    environment:
      - POSTGRESQL_USERNAME=testuser
      - POSTGRESQL_PASSWORD=testuser
      - POSTGRESQL_DATABASE=REPLACE_ME_APP_NAME
      - POSTGRESQL_POSTGRES_PASSWORD=testuser
    hostname: database
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    expose:
      - "5432"

  app:
    image: maven:3-jdk-11
    environment:
      - METRIC_TAG_SOURCE=SpringBoot
      - GRAFANA_SERVER=http://grafana:3000
      - GRAFANA_ADMIN_API_KEY=null
      - GRAFANA_DATASOURCE_NAME=Prometheus
    hostname: app
    container_name: app
    working_dir: /app
    command: sh -c "mvn install -P compose && java -jar REPLACE_ME_APP_NAME-boot/target/REPLACE_ME_APP_NAME-boot.jar --spring.profiles.active=compose"
    volumes:
      - ./:/app/
    restart: always
    depends_on:
      - database
    ports:
      - "8080:8080"
      - "8081:8081"
    expose:
      - "8080"
      - "8081"

  prometheus:
    image: prom/prometheus:v2.31.1
    container_name: prometheus
    depends_on:
      - app
    command: --config.file=/etc/prometheus/prometheus.yml --log.level=debug
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9090:9090
    expose:
      - 9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    expose:
      - 3000
    volumes:
      - ./grafana:/var/lib/grafana