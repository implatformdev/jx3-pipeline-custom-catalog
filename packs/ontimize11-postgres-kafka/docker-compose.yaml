version: "3"
services:
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - 9002:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.1
    ports:
      - 9092:9092
      - 9093:9093
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  schemaregistry:
    image: confluentinc/cp-schema-registry:5.1.2
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,OPTIONS"
    ports:
      - 8085:8085

  database:
    image: bitnami/postgresql:11.12.0-debian-10-r13
    environment:
      POSTGRESQL_USERNAME: testuser
      POSTGRESQL_PASSWORD: testuser
      POSTGRESQL_DATABASE: REPLACE_ME_APP_NAME
      POSTGRESQL_POSTGRES_PASSWORD: testuser
    hostname: database
    container_name: database
    restart: always
    ports:
      - 5432:5432
    expose:
      - 5432

  app:
    image: maven:3-jdk-11
    hostname: app
    container_name: app
    working_dir: /app
    command: sh -c "mvn clean install -P compose && java -jar REPLACE_ME_APP_NAME-boot/target/REPLACE_ME_APP_NAME-boot.jar --spring.profiles.active=compose"
    environment:
      KAFKA_SERVER: localhost:9092
      SCHEMA_REGISTRY_SERVER: http://localhost:8081
    volumes:
      - ./:/app/
    restart: always
    depends_on:
      - database
      - kafka
    ports:
      - 8080:8080
    expose:
      - 8080

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local